name: Benchmark
on:
  workflow_dispatch:
    inputs:
      repository:
        type: string
        description: name of repository triggers this workflow, e.g. FluxML/NNlib.jl
      pr_id:
        type: string
        description: id of the pull request that triggers this workflow
      target_url:
        type: string
        description: url of target
      baseline_url:
        type: string
        description: url of baseline

jobs:
  Cache:
    runs-on: ubuntu-latest
    env:
      TARGET_URL: ${{ github.event.inputs.target_url || format('{0}#{1}', github.event.pull_request.head.repo.html_url, github.event.pull_request.head.sha) }}
      BASELINE_URL: ${{ github.event.inputs.baseline_url || format('{0}#{1}', github.event.pull_request.base.repo.html_url, github.event.pull_request.base.sha) }}
    steps:
      -
        name: Print target&baseline repo url
        run: |
          echo "Target repo url: $TARGET_URL"
          echo "Baseline repo url: $BASELINE_URL"
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
      - uses: julia-actions/julia-buildpkg@v1
      -
        name: Install dependencies
        run: |
          julia --project=benchmark benchmark/cachesetup-cli.jl  --target=$TARGET_URL --baseline=$BASELINE_URL
      -
        name: Store cache
        uses: actions/cache@v3
        with:
          path: ~/.julia
          key: ${{ runner.os }}-bm-${{ env.TARGET_URL }}-${{ env.BASELINE_URL }}-${{ hashFiles('benchmark/Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-bm-${{ env.TARGET_URL }}-${{ env.BASELINE_URL }}-

  RunBenchmark:
    needs: [Cache]
    runs-on: ubuntu-latest
    env:
      TARGET_URL: ${{ github.event.inputs.target_url || format('{0}#{1}', github.event.pull_request.head.repo.html_url, github.event.pull_request.head.sha) }}
      BASELINE_URL: ${{ github.event.inputs.baseline_url || format('{0}#{1}', github.event.pull_request.base.repo.html_url, github.event.pull_request.base.sha) }}
    strategy:
      matrix:
        bm: [
          "nnlib:attention,activations", "nnlib:gemm", "nnlib:conv",
          "nnlib:pooling,softmax", "nnlib:dropout", "nnlib:upsample",
          "flux"
        ]
    steps:
      -
        name: Print target&baseline repo url
        run: |
          echo "Target repo url: $TARGET_URL"
          echo "Baseline repo url: $BASELINE_URL"
      -
        name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Setup julia
        uses: julia-actions/setup-julia@v1
      -
        name: Restore cache
        uses: actions/cache@v3
        with:
          path: ~/.julia
          key: ${{ runner.os }}-bm-${{ env.TARGET_URL }}-${{ env.BASELINE_URL }}-${{ hashFiles('benchmark/Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-bm-${{ env.TARGET_URL }}-${{ env.BASELINE_URL }}-
      -
        name: Build pkg
        uses: julia-actions/julia-buildpkg@v1
      -
        id: benchmark
        name: Run benchmark
        run: |
          julia --project=benchmark benchmark/runbenchmarks-pr.jl --target=$TARGET_URL --baseline=$BASELINE_URL --enable=${{ matrix.bm }}
      -
        name: Print report
        run: |
          cat benchmark/report.md
      -
        name: Upload report
        uses: actions/upload-artifact@v2
        with:
          name: fluxml-benchmark-result-${{ matrix.bm }}
          path: ï½œ
            benchmark/result-baseline.json
            benchmark/result-target.json

  MergeReport:
    needs: [RunBenchmark]
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      -
        name: Download all reports
        uses: actions/download-artifact@v3
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
      - uses: julia-actions/julia-buildpkg@v1
      -
        name: Merge reports
        run: |
          julia --project=benchmark benchmark/mergereports-cli.jl
      -
        name: Upload final report
        uses: actions/upload-artifact@v2
        with:
          name: final-report
          path: benchmark/report.md

  Comment:
    needs: [MergeReport]
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.repository != '' && github.event.inputs.pr_id != '' }}
    runs-on: ubuntu-latest
    steps:
      -
        name: Download report
        uses: actions/download-artifact@v3
        with:
          name: final-report
      -
        name: Comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          repository: ${{ github.event.inputs.repository }}
          issue-number: ${{ github.event.inputs.pr_id }}
          token: ${{ secrets.PAT }}
          body-file: report.md

  DryPrint:
    needs: [MergeReport]
    if: ${{ github.event.inputs.repository == '' || github.event.inputs.pr_id == '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: final-report
      - run: |
          cat report.md
